**opis delovanja vmesnika, ki omogoèa vnos le ene naloge:

Ko se požene datoteka, v kateri je implementiran vmesnik, se najprej poklièe parser iz razreda ProblemPart, 
ki sparsa vhodno datoteko »podnaloga_in.py«,  nato pa se posamezne dele podnaloge zapiše v ustrezna okna na 
vmesniku. Uporabnik lahko nato že vnešeno vsebino v oknih pobriše, spremeni ali kaj doda. 
S klikom na gumb DODAJ se vsebina posameznih oken shrani v ustrezne atribute iz razreda ProblemPart, 
pri èemer se generira objekt iz tega razreda, ki se ga nato s pomoèjo metode repr zapiše na izhodno datoteko 
»podnaloga_out.py«.



**opis delovanja vmesnika, ki omogoèa vnos celotnega sklopa:

gumb DODAJ:
ustvari datoteke, pripadajoèe posameznim oknom, z vsebino zapisano v oknih.

V oknu za sklop se ustvarijo datoteke:
-Sklop_naslov.txt
-Slop_opis.txt

V oknu za nalogo pa:
Naloga#_opis.txt
Naloga#_resitev.txt
Naloga#_prekoda.txt
Naloga#_testi_ostali.txt
Naloga#_testi_equal_numbers.txt, v kateri so shranjene številke check.equal testov (prvo okence) (povezava z and)
Naloga#_testi_equal_expressions.txt, v kateri so shranjeni prvi argumenti check.equal testov (drugo okence)
Naloga#_testi_equal_results.txt, v kateri so shranjeni drugi argumenti check.equal testov (tretje okence)

Èe kaj spremeniš ali dodaš v okno in še enkrat pritisneš dodaj, se to doda na že obsotojeèo datoteko,
vendar to dela le, dokler ne odpreš novega okna (za novo nalogo). 
Èe se potem vrneš nazaj na katero od prejšnjih odprtih nalog in kaj dopišeš v katerega izmed oken, 
se bo vsebina zapisala na datoteke pripadajoèe nazadje odprtemu oknu.

gumb NASLEDNJA:
odpre novo okno pri èemer starega okna ne zapre

gumb ZAPRI:
samo zapre obstojeèe okno